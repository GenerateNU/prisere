{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Prisere API"
  },
  "servers": [
    {
      "url": "/api"
    }
  ],
  "components": {
    "schemas": {},
    "parameters": {}
  },
  "paths": {
    "/users": {
      "post": {
        "summary": "Create a new user",
        "description": "Creates a new user with the provided information",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "minLength": 1
                  },
                  "lastName": {
                    "type": "string",
                    "minLength": 1
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "companyId": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "firstName",
                  "lastName"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create user response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "companyId": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "firstName",
                    "lastName"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Create user error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Create user error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/company": {
      "get": {
        "summary": "Fetches a user's associated company by the given user ID",
        "description": "Finds the user's comapny with the given user's ID in the database",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull fetch of a user's company from the database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "companyId": {
                      "type": "string"
                    },
                    "companyName": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "companyId",
                    "companyName"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Get Company from User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "There does not exist any user in the database such that the given id matches their id OR there is no such user with the given ID that has a non-null company"
          },
          "500": {
            "description": "Get Company from User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Fetches a user by the given ID",
        "description": "Finds the user with the given ID in the database",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull fetch of a user from the databse",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "firstName",
                    "lastName"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Get User Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "There does not exist any user in the database such that the given id matches their id"
          },
          "500": {
            "description": "Get User Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/companies": {
      "post": {
        "summary": "Create a new company",
        "description": "Creates a new company using a company name and optional Quickbooks import time",
        "tags": [
          "Companies"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "name"
                ]
              },
              "required": true
            }
          }
        },
        "responses": {
          "201": {
            "description": "Company created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "lastQuickBooksImportTime": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Create Company Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Company not found"
          },
          "500": {
            "description": "Create Company Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/companies/{id}": {
      "get": {
        "summary": "Gets a company from the database",
        "description": "Gets a company using the company ID",
        "tags": [
          "Companies"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Company fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "lastQuickBooksImportTime": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Create Company Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Company not found"
          },
          "500": {
            "description": "Create Company Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/companies/{id}/quickbooks-import-time": {
      "patch": {
        "summary": "Update a company's lastQuickBooksImportTime",
        "description": "Updates the lastQuickBooksImportTime for a company by ID",
        "tags": [
          "Companies"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "importTime": {
                    "type": "string",
                    "format": "date"
                  }
                },
                "required": [
                  "importTime"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Company updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "lastQuickBooksImportTime": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Create Company Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Create Company Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/companies/{id}/location-address": {
      "get": {
        "summary": "Gets a company's location from the database",
        "description": "Gets a company's locations using the company ID",
        "tags": [
          "Companies"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Company locations fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "country": {
                        "type": "string",
                        "minLength": 1
                      },
                      "stateProvince": {
                        "type": "string",
                        "minLength": 1
                      },
                      "city": {
                        "type": "string",
                        "minLength": 1
                      },
                      "streetAddress": {
                        "type": "string",
                        "minLength": 1
                      },
                      "postalCode": {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^\\d+$"
                      },
                      "county": {
                        "type": "string",
                        "minLength": 1
                      },
                      "companyId": {
                        "type": "string",
                        "format": "uuid"
                      }
                    },
                    "required": [
                      "country",
                      "stateProvince",
                      "city",
                      "streetAddress",
                      "postalCode",
                      "companyId"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Get Company Locations Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Get Company Locations Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/disaster": {
      "post": {
        "summary": "Create a new disaster",
        "description": "Creates a new disaster with the provided information",
        "tags": [
          "Disaster"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "disasterNumber": {
                    "type": "number"
                  },
                  "fipsStateCode": {
                    "type": "number",
                    "nullable": true,
                    "minimum": 0,
                    "maximum": 56
                  },
                  "declarationDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "incidentBeginDate": {
                    "type": "string",
                    "nullable": true,
                    "format": "date-time"
                  },
                  "incidentEndDate": {
                    "type": "string",
                    "nullable": true,
                    "format": "date-time"
                  },
                  "fipsCountyCode": {
                    "type": "number",
                    "nullable": true,
                    "minimum": 0,
                    "maximum": 1000
                  },
                  "declarationType": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 2
                  },
                  "designatedArea": {
                    "type": "string"
                  },
                  "designatedIncidentTypes": {
                    "type": "string",
                    "nullable": true
                  },
                  "incidentType": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "disasterNumber",
                  "fipsStateCode",
                  "declarationDate",
                  "incidentBeginDate",
                  "incidentEndDate",
                  "fipsCountyCode",
                  "declarationType",
                  "designatedArea",
                  "designatedIncidentTypes",
                  "incidentType"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "A disaster was created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "fipsStateCode": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 56
                    },
                    "declarationDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "declarationType": {
                      "type": "string",
                      "minLength": 2,
                      "maxLength": 2
                    },
                    "designatedIncidentTypes": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "fipsStateCode",
                    "declarationDate",
                    "declarationType",
                    "designatedIncidentTypes"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Creating Disaster Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Creating Disaster Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all disasters",
        "description": "Gets all disasters stored in the database",
        "tags": [
          "Disaster"
        ],
        "responses": {
          "200": {
            "description": "Retrieved all disasters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "disasterNumber": {
                        "type": "number"
                      },
                      "fipsStateCode": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 56
                      },
                      "declarationDate": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "incidentBeginDate": {
                        "type": "string",
                        "nullable": true
                      },
                      "incidentEndDate": {
                        "type": "string",
                        "nullable": true
                      },
                      "fipsCountyCode": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1000,
                        "exclusiveMaximum": true
                      },
                      "declarationType": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2
                      },
                      "designatedArea": {
                        "type": "string"
                      },
                      "designatedIncidentTypes": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "required": [
                      "id",
                      "disasterNumber",
                      "fipsStateCode",
                      "declarationDate",
                      "incidentBeginDate",
                      "incidentEndDate",
                      "fipsCountyCode",
                      "declarationType",
                      "designatedArea",
                      "designatedIncidentTypes"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Getting Disaster Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Getting Disaster Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/location-address": {
      "post": {
        "summary": "Create an address for some location of a company",
        "description": "Creates a new location address with the provided information",
        "tags": [
          "Location Address"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "country": {
                    "type": "string",
                    "minLength": 1
                  },
                  "stateProvince": {
                    "type": "string",
                    "minLength": 1
                  },
                  "city": {
                    "type": "string",
                    "minLength": 1
                  },
                  "streetAddress": {
                    "type": "string",
                    "minLength": 1
                  },
                  "postalCode": {
                    "type": "string",
                    "minLength": 1,
                    "pattern": "^\\d+$"
                  },
                  "county": {
                    "type": "string",
                    "minLength": 1
                  },
                  "companyId": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "country",
                  "stateProvince",
                  "city",
                  "streetAddress",
                  "postalCode",
                  "companyId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create location address response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string",
                      "minLength": 1
                    },
                    "stateProvince": {
                      "type": "string",
                      "minLength": 1
                    },
                    "city": {
                      "type": "string",
                      "minLength": 1
                    },
                    "streetAddress": {
                      "type": "string",
                      "minLength": 1
                    },
                    "postalCode": {
                      "type": "string",
                      "minLength": 1,
                      "pattern": "^\\d+$"
                    },
                    "county": {
                      "type": "string",
                      "minLength": 1
                    },
                    "companyId": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "id",
                    "country",
                    "stateProvince",
                    "city",
                    "streetAddress",
                    "postalCode",
                    "companyId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error Creating Location Address",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Error Creating Location Address",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/location-address/{id}": {
      "get": {
        "summary": "Gets an address for some location of a company",
        "description": "Creates a new location address with the provided information",
        "tags": [
          "Location Address"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "The associated location address for the given information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "stateProvince": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "streetAddress": {
                      "type": "string"
                    },
                    "postalCode": {
                      "type": "string",
                      "minLength": 1,
                      "pattern": "^\\d+$"
                    },
                    "county": {
                      "type": "string"
                    },
                    "companyId": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "id",
                    "country",
                    "stateProvince",
                    "city",
                    "streetAddress",
                    "postalCode",
                    "companyId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error Getting Location Address",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The given UUID does not have an associated location address in the database"
          },
          "500": {
            "description": "Error Getting Location Address",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Removes location of a company",
        "description": "Removes the location address with the provided id",
        "tags": [
          "Location Address"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Location successfully deleted"
          },
          "400": {
            "description": "Invalid location ID or no Company with that ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/disasterNotification/{id}": {
      "get": {
        "summary": "Get user notifications",
        "description": "Retrieves all disaster notifications for a specific user with optional filtering and pagination",
        "tags": ["Disaster Notifications"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "User ID"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["web", "email"]
            },
            "description": "Filter by notification type"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
            "200": {
              "description": "Successfully retrieved user notifications",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "userId": { "type": "string" },
                        "femaDisasterId": { "type": "string" },
                        "locationAddressId": { "type": "string" },
                        "notificationStatus": { "type": "string" },
                        "femaDisaster": {
                          "type": "object",
                          "properties": {
                            "disasterNumber": { "type": "number" },
                            "incidentType": { "type": "string" },
                            "designatedArea": { "type": "string" },
                            "declarationDate": { "type": "string" }
                          }
                        },
                        "locationAddress": {
                          "type": "object",
                          "properties": {
                            "id": { "type": "string" },
                            "streetAddress": { "type": "string" },
                            "city": { "type": "string" },
                            "stateProvince": { "type": "string" },
                            "postalCode": { "type": "string" },
                            "company": {
                              "type": "object",
                              "properties": {
                                "id": { "type": "string" },
                                "name": { "type": "string" }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }   
          },
          "400": {
            "description": "Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  },
                  "required": ["error"]
                }
              }
            }
          },
          "404": {
            "description": "User not found or no notifications found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete notification",
        "description": "Permanently deletes a specific notification",
        "tags": [
          "Disaster Notifications"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Notification successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "deletedId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "deletedId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid notification ID format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Notification not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/disasterNotification/{id}/markAsRead": {
      "patch": {
        "summary": "MarkRead notification",
        "description": "Marks a specific notification as read",
        "tags": [
          "Disaster Notifications"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Notification successfully read",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "femaDisasterId": {
                      "type": "string"
                    },
                    "locationAddressId": { "type": "string" },
                    "notificationType": {
                      "type": "string",
                      "enum": [
                        "web",
                        "email"
                      ]
                    },
                    "notificationStatus": {
                      "type": "string",
                      "nullable": true,
                      "enum": [
                        "unread",
                        "read",
                        "read"
                      ]
                    },
                    "firstSentAt": {
                      "anyOf": [
                        {
                          "type": "string",
                          "format": "date"
                        },
                        {
                          "type": "string"
                        },
                        {
                          "nullable": true
                        }
                      ]
                    },
                    "lastSentAt": {
                      "anyOf": [
                        {
                          "type": "string",
                          "format": "date"
                        },
                        {
                          "type": "string"
                        },
                        {
                          "nullable": true
                        }
                      ]
                    },
                    "readAt": {
                      "anyOf": [
                        {
                          "type": "string",
                          "format": "date"
                        },
                        {
                          "type": "string"
                        },
                        {
                          "nullable": true
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "userId",
                    "femaDisasterId",
                    "locationAddressId",
                    "notificationType"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid notification ID format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Notification not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/disasterNotification/{id}/markUnread": {
      "patch": {
        "summary": "Dismiss notification",
        "description": "Marks a specific notification as read/markUnreaded",
        "tags": [
          "Disaster Notifications"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Notification successfully markUnreaded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "femaDisasterId": {
                      "type": "string"
                    },
                    "locationAddressId": { "type": "string" },
                    "notificationType": {
                      "type": "string",
                      "enum": [
                        "web",
                        "email"
                      ]
                    },
                    "notificationStatus": {
                      "type": "string",
                      "nullable": true,
                      "enum": [
                        "unread",
                        "read",
                        "read"
                      ]
                    },
                    "firstSentAt": {
                      "anyOf": [
                        {
                          "type": "string",
                          "format": "date"
                        },
                        {
                          "type": "string"
                        },
                        {
                          "nullable": true
                        }
                      ]
                    },
                    "lastSentAt": {
                      "anyOf": [
                        {
                          "type": "string",
                          "format": "date"
                        },
                        {
                          "type": "string"
                        },
                        {
                          "nullable": true
                        }
                      ]
                    },
                    "readAt": {
                      "anyOf": [
                        {
                          "type": "string",
                          "format": "date"
                        },
                        {
                          "type": "string"
                        },
                        {
                          "nullable": true
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "userId",
                    "femaDisasterId",
                    "locationAddressId",
                    "notificationType"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid notification ID format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Notification not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/disasterNotification/bulk": {
      "post": {
        "summary": "Bulk create notifications",
        "description": "Creates multiple disaster notifications at once for impacted users",
        "tags": [
          "Disaster Notifications"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "string"
                    },
                    "femaDisasterId": {
                      "type": "string"
                    },
                    "locationAddressId": { "type": "string" },
                    "notificationType": {
                      "type": "string",
                      "enum": [
                        "web",
                        "email"
                      ]
                    }
                  },
                  "required": [
                    "userId",
                    "femaDisasterId",
                    "locationAddressId",
                    "notificationType"
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Notifications successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "userId": {
                        "type": "string"
                      },
                      "femaDisasterId": {
                        "type": "string"
                      },
                      "locationAddressId": { "type": "string" },
                      "notificationType": {
                        "type": "string",
                        "enum": [
                          "web",
                          "email"
                        ]
                      },
                      "notificationStatus": {
                        "type": "string",
                        "nullable": true,
                        "enum": [
                          "unread",
                          "read",
                          "read"
                        ]
                      },
                      "firstSentAt": {
                        "anyOf": [
                          {
                            "type": "string",
                            "format": "date"
                          },
                          {
                            "type": "string"
                          },
                          {
                            "nullable": true
                          }
                        ]
                      },
                      "lastSentAt": {
                        "anyOf": [
                          {
                            "type": "string",
                            "format": "date"
                          },
                          {
                            "type": "string"
                          },
                          {
                            "nullable": true
                          }
                        ]
                      },
                      "readAt": {
                        "anyOf": [
                          {
                            "type": "string",
                            "format": "date"
                          },
                          {
                            "type": "string"
                          },
                          {
                            "nullable": true
                          }
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "userId",
                      "femaDisasterId",
                      "notificationType"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request payload or UUID format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User or FEMA Disaster not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Failed to insert some notifications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/preferences/{id}": {
      "get": {
        "summary": "Get user notification preferences",
        "description": "Retrieves notification preferences for a specific user",
        "tags": [
          "Preferences"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "name": "id",
            "in": "path",
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user preferences",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "emailEnabled": {
                      "type": "boolean"
                    },
                    "webNotificationsEnabled": {
                      "type": "boolean"
                    },
                    "notificationFrequency": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "emailEnabled",
                    "webNotificationsEnabled",
                    "notificationFrequency"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update user notification preferences",
        "description": "Updates notification preferences for a specific user",
        "tags": [
          "Preferences"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "name": "id",
            "in": "path",
            "description": "User ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "emailEnabled": {
                    "type": "boolean"
                  },
                  "webNotificationsEnabled": {
                    "type": "boolean"
                  },
                  "notificationFrequency": {
                    "type": "string"
                  }
                },
                "minProperties": 1
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully updated user preferences",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "emailEnabled": {
                      "type": "boolean"
                    },
                    "webNotificationsEnabled": {
                      "type": "boolean"
                    },
                    "notificationFrequency": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "emailEnabled",
                    "webNotificationsEnabled",
                    "notificationFrequency"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - empty payload or invalid user ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    }
}